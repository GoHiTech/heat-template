heat_template_version: 2018-08-31
description: High performance compute cluster

parameters:
  dns_domain:
    type: string
    label: DNS domain
    description: DNS domain
    default: gohitech.net
  dns_nameservers:
    type: comma_delimited_list
    label: DNS name servers
    description: A comma delimited list of name servers
    default: ["1.1.1.1","8.8.8.8"]
  mgmt_count:
    type: number
    label: Management node count
    description: Number of Management nodes to create
    default: 0
  mgmt_flavor:
    type: string
    label: Management instance type
    description: Image flavor to use for Management nodes
  network:
    type: string
    label: existing network
    description: Existing network
    default: None
  network_public:
    type: string
    label: External network
    description: ID or name of the external network
    default: None
  security_groups:
    type: json
    default: ["default"]
  subnet_pool:
    type: string
    label: IPAM subnet pool name
    description: Project subnet pool name for IP range to be allocated from
    default: ""
  tags:
    type: json
    label: Tags
    description: Tags
    default: {}
  volume_size_microk8s: {type: number, default: 0}
  volume_size_lxd: {type: number, default: 0}

outputs:
  mgmt_sg_id:
    description: Managment Security group id
    value: {get_resource: mgmt_sg}

conditions:
  createNetwork: false
  subnetPool: {not: {equals: [{get_parm: subent_pool},""]}}

resources:
  router:
    type: OS::Neutron::Router
    condition: createNetwork
    properties:
      admin_state_up: true
      external_gateway_info:
        network: {get_param: network_public}
      name: {get_param: OS::stack_name}

  network_private:
    type: OS::Neutron::Net
    condition: createNetwork
    properties:
      name: {get_param: OS::stack_name}
      port_security_enabled: true

  subnet:
    type: OS::Neutron::Subnet
    condition: createNetwork
    properties:
      network_id: {get_resource: private_network}
      allocation_pools: {get_param: subnet_allocation_pools}
      dns_nameservers: {get_param: dns_nameservers}
      host_routes: {get_param: subnet_host_routes}
      name: {get_param: OS::stack_name}
      cidr: {get_param: network_cidr}
      subnetpool: {get_param: subnet_pool}

  mgmt_sg:
    type: OS::Neutron::SecurityGroup
    properties:
      description: "Management nodes"
      name: {list_join: ["-",[{get_param: OS::stack_name},"mgmt"]]}
      rules:
      - {direction: egress}
      - {direction: egress, ethertype: "IPv6"}
      - {port_range_max: 22, port_range_min: 22, protocol: tcp, remote_ip_prefix: 0.0.0.0/0}
      - {remote_mode: "remote_group_id"}
      - {ethertype: "IPv6", remote_mode: "remote_group_id"}

  mgmt:
    type: OS::Heat::ResourceGroup
    properties:
      count: {get_param: mgmt_count}
      resource_def:
        type: OS::Custom::Server
        properties:
          flavor: {get_param: mgmt_flavor}
          metadata:
            map_merge:
              - {get_param: tags}
              - {stack_name: {get_param: OS::stack_name}}
              - {groups: "lxd,microk8s,public"}
              - {ansible_groups: "lxd,microk8s,public"}
          name: 
            list_join:
              - '.'
              -
                - list_join: ['-', [get_param: OS::stack_name,"mgmt","%index%"]]
                - get_param: dns_domain
          network: {if: [createNetwork, {get_resource: private_network}, {get_param: network}]}
          security_groups:
            - {get_resource: mgmt_sg}
          volume_size_microk8s: {get_param: volume_size_microk8s}
          volume_size_lxd: {get_param: volume_size_lxd}
          #allowed_address_pairs:
          #  list_concat:
          #    - {get_param: allowed_address_pairs}
          #    - [{ip_address: {get_attr: [pcs_port,fixed_ips,0,ip_address]}}]
